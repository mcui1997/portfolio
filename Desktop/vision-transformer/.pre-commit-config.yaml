repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-json
      - id: check-merge-conflict
      - id: check-ast
      - id: debug-statements
      - id: mixed-line-ending
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3.9
        args: ['--line-length=88']

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length=88']

  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503', '--exclude=.git,__pycache__,.venv,venv,build,dist']
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        args: ['--ignore-missing-imports', '--no-strict-optional', '--warn-redundant-casts', '--warn-unused-ignores']
        additional_dependencies: 
          - types-requests
          - types-PyYAML
          - types-setuptools
        exclude: '^(tests/|docs/|notebooks/)'

  - repo: https://github.com/pycqa/pylint
    rev: v2.17.5
    hooks:
      - id: pylint
        args: ['--max-line-length=88', '--disable=C0114,C0115,C0116,R0903,R0913,W0511']
        exclude: '^(tests/|docs/|notebooks/)'

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-ll', '--skip', 'B101,B601']
        exclude: '^(tests/|notebooks/)'

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.10.1
    hooks:
      - id: pyupgrade
        args: ['--py39-plus']

  - repo: https://github.com/hadialqattan/pycln
    rev: v2.2.2
    hooks:
      - id: pycln
        args: ['--all']

  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: python -m pytest tests/unit/ -x --tb=short -q
        language: system
        pass_filenames: false
        always_run: true
        stages: [push]

      - id: requirements-txt-fixer
        name: Fix requirements.txt
        entry: python -c "import sys; lines = open('requirements.txt').readlines() if sys.argv[1:] else []; lines.sort(key=str.lower); open('requirements.txt', 'w').writelines(lines)"
        language: system
        files: requirements.*\.txt$